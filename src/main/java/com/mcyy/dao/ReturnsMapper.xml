<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mcyy.dao.mapper.ReturnsMapper">
  <resultMap id="BaseResultMap" type="com.mcyy.entity.Returns">
    <id column="r_id" jdbcType="INTEGER" property="rId" />
    <result column="r_medicineid" jdbcType="INTEGER" property="rMedicineid" />
    <result column="r_count" jdbcType="INTEGER" property="rCount" />
    <result column="r_date" jdbcType="DATE" property="rDate" />
    <result column="r_pasttime" jdbcType="DATE" property="rPasttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    r_id, r_medicineid, r_count, r_date, r_pasttime
  </sql>
  <select id="selectByExample" parameterType="com.mcyy.entity.ReturnsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from returns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from returns
    where r_id = #{rId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from returns
    where r_id = #{rId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcyy.entity.ReturnsExample">
    delete from returns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcyy.entity.Returns">
    insert into returns (r_id, r_medicineid, r_count, 
      r_date, r_pasttime)
    values (#{rId,jdbcType=INTEGER}, #{rMedicineid,jdbcType=INTEGER}, #{rCount,jdbcType=INTEGER}, 
      #{rDate,jdbcType=DATE}, #{rPasttime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.mcyy.entity.Returns">
    insert into returns
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        r_id,
      </if>
      <if test="rMedicineid != null">
        r_medicineid,
      </if>
      <if test="rCount != null">
        r_count,
      </if>
      <if test="rDate != null">
        r_date,
      </if>
      <if test="rPasttime != null">
        r_pasttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="rMedicineid != null">
        #{rMedicineid,jdbcType=INTEGER},
      </if>
      <if test="rCount != null">
        #{rCount,jdbcType=INTEGER},
      </if>
      <if test="rDate != null">
        #{rDate,jdbcType=DATE},
      </if>
      <if test="rPasttime != null">
        #{rPasttime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcyy.entity.ReturnsExample" resultType="java.lang.Long">
    select count(*) from returns
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update returns
    <set>
      <if test="record.rId != null">
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
      <if test="record.rMedicineid != null">
        r_medicineid = #{record.rMedicineid,jdbcType=INTEGER},
      </if>
      <if test="record.rCount != null">
        r_count = #{record.rCount,jdbcType=INTEGER},
      </if>
      <if test="record.rDate != null">
        r_date = #{record.rDate,jdbcType=DATE},
      </if>
      <if test="record.rPasttime != null">
        r_pasttime = #{record.rPasttime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update returns
    set r_id = #{record.rId,jdbcType=INTEGER},
      r_medicineid = #{record.rMedicineid,jdbcType=INTEGER},
      r_count = #{record.rCount,jdbcType=INTEGER},
      r_date = #{record.rDate,jdbcType=DATE},
      r_pasttime = #{record.rPasttime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcyy.entity.Returns">
    update returns
    <set>
      <if test="rMedicineid != null">
        r_medicineid = #{rMedicineid,jdbcType=INTEGER},
      </if>
      <if test="rCount != null">
        r_count = #{rCount,jdbcType=INTEGER},
      </if>
      <if test="rDate != null">
        r_date = #{rDate,jdbcType=DATE},
      </if>
      <if test="rPasttime != null">
        r_pasttime = #{rPasttime,jdbcType=DATE},
      </if>
    </set>
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcyy.entity.Returns">
    update returns
    set r_medicineid = #{rMedicineid,jdbcType=INTEGER},
      r_count = #{rCount,jdbcType=INTEGER},
      r_date = #{rDate,jdbcType=DATE},
      r_pasttime = #{rPasttime,jdbcType=DATE}
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
</mapper>